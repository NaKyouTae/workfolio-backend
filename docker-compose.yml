services:
#  workfolio-service:
#    image: workfolio-server:local
#    container_name: workfolio-server
#    ports:
#      - "8080:8080"
#    env_file:
#      - docker-compose.env
#    depends_on:
#      postgres:
#        condition: service_healthy
#      redis:
#        condition: service_healthy
#    networks:
#      - workfolio-network

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    env_file:
      - ./docker-compose.env
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "123456789a"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    command:
      - postgres
      - -c
      - max_connections=100
      - -c
      - shared_buffers=256MB
      - -c
      - effective_cache_size=1GB
      - -c
      - maintenance_work_mem=64MB
      - -c
      - checkpoint_completion_target=0.9
      - -c
      - wal_buffers=16MB
      - -c
      - default_statistics_target=100
      - -c
      - random_page_cost=1.1
      - -c
      - effective_io_concurrency=200
      - -c
      - work_mem=2621kB
      - -c
      - min_wal_size=1GB
      - -c
      - max_wal_size=4GB
    networks:
      - workfolio-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spectrum -d workfolio"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:8.2.0-alpine
    container_name: redis
    env_file:
      - docker-compose.env
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru --appendonly yes --save 900 1 --save 300 10 --save 60 10000
    networks:
      - workfolio-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#    ports:
#      - "9090:9090"
#    networks:
#      - workfolio-network
#
#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    ports:
#      - "3000:3000"
#    networks:
#      - workfolio-network

volumes:
  postgres-data:
  redis-data:

networks:
  workfolio-network:
    driver: bridge
